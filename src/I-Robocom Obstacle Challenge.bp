folder "prjs""Clever"
Speaker.Tone(100,440,80)
Sensor.SetMode(4,2)

'Display Function
Function Display (in number value1,in number value2)
  LCD.Clear()
  LCD.Text(1,50,0,2,value1)
  LCD.Text(1,50,20,2,value2)
EndFunction

'Set Multiplexer Sensor Mode
Function setSensorMode(in number port, in number chanel, in number mode)
  address = 80 + 1 * (chanel - 1)
  Sensor.WriteI2CRegister(port,address,82,mode)
EndFunction

'Get Multiplexer Sensor Value
Function getValue(in number port, in number chanel, out number values)
  address = 80 + 1 * (chanel - 1)
  readData = Sensor.ReadI2CRegisters(port,address,84,2)
  values = readData[1] * 256 + readData[0]
EndFunction

'-----Pixy Function-------'
Function getSignature(in number port, in number sig, out number x, out number y)
  address = 80 + sig
  values = Sensor.ReadI2CRegisters(port, 1, address, 5)
  x = values[1]
  y = values[2]
EndFunction

setSensorMode(2,1,0)
setSensorMode(2,2,0)
setSensorMode(2,3,0)

'-----Sensor Function-----'
@relativeHeading=0
Sub ReadSensor
  While "True"
    getValue(2,3,RawGyro)
    If RawGyro >= 32768 Then
      Gyro = RawGyro - 65536
    Else
      Gyro = RawGyro
    EndIf
    @relativeHeading = @Gyro*-1 + target
    getValue(2,1,rawleftwall)
    getValue(2,2,rawrightwall)
    If rawleftwall>2500 Then
      leftwall=2500
    Else
      leftwall=rawleftwall
    EndIf
    If rawrightwall>2500 Then
      rightwall=2500
    Else
      rightwall=rawrightwall
    EndIf
    getSignature(1,1,greenx,greeny)
    getSignature(1,2,redx,redy)
    getSignature(1,3,pinkx,pinky)
    getSignature(3,3,backpinkx,backpinky)
  EndWhile
EndSub

Thread.Run=ReadSensor
'-----------------------------------------------------'

Sub ResetSteering
  Motor.StartPower("A",50)
  Program.Delay(500)
  While Motor.GetSpeed("A")<>0
    'wait
  EndWhile
  Motor.Move("A",-50,90.75,"True")
  Motor.ResetCount("A")
EndSub

'------------------------------------------------------

target = 0
lastPillar=0
pillarRdistance=220
pillarGdistance=200
followRdistance=pillarRdistance+10
followGdistance=pillarGdistance+20

avoidGreenpixel=235
avoidRedpixel=15
lastPillarDistance=150

Sub Steering
  If leftwall>0 And rightwall>0 And Sensor.ReadRawValue(4,0)>0 Then
    Motor.StartPower("D",speed)
  Else
    Motor.StartPower("D",0)
  EndIf
  
  If uturnnow = 1 Then
    'pillardistance=0
    turn = @relativeHeading * correction * 1.9
  Else
    greenDistance = Math.SquareRoot(Math.Power(greenx-130,2)+Math.Power(greeny-255,2))
    redDistance = Math.SquareRoot(Math.Power(redx-130,2)+Math.Power(redy-255,2))
    'Display(greenDistance,redDistance)
    
    If greenDistance<lastPillarDistance Then
      lastPillar=-1
    EndIf
    If redDistance<lastPillarDistance Then
      lastPillar=1
    EndIf
    
    If leftwall < 110 And wallCheck=1 And Math.Abs(@relativeHeading)<45 Then
      Speaker.Tone(100,220,50) 'ORI 140
      leftwallturn = -67
    Else
      leftwallturn = 0
    EndIf
    
    If rightwall < 110 And wallCheck=1 And Math.Abs(@relativeHeading)<45 Then
      Speaker.Tone(100,660,50) 'ORI 150
      rightwallturn = 67
    Else
      rightwallturn = 0
    EndIf
    
    If greenDistance < followGdistance Or redDistance < followRdistance  Then
      If greenDistance < pillarGdistance Then
        pillarturn=((avoidGreenpixel-greenx)*greeny/100)*0.64
        lastPillar=-1
      ElseIf redDistance < pillarRdistance Then
        pillarturn=((avoidRedpixel-redx)*redy/100)*0.68
        lastPillar=1
      ElseIf greenDistance<followGdistance Then
        'Speaker.Tone(100,200,50)
        If cw=1 Then
          pillarturn = (130-greenx)*0.55
        Else
          pillarturn = (130-greenx)*0.55 '150
        EndIf
      ElseIf redDistance<followRdistance Then
        'Speaker.Tone(100,1000,50)
        If cw=-1 Then
          pillarturn = (130-redx)*0.55
        Else
          pillarturn = (130-redx)*0.55 '110
        EndIf
      EndIf
    Else
      pillarturn = 0
    EndIf
    
    If pinkx > 0 And pinkx < 50 And pinky > 100 And cw = 1 And LoopCount < 12 + uturn Or pinkx > 200 And pinky > 100 And cw = -1 And LoopCount < 12 + uturn Or pinky > 80 And pinkx > 50 And pinkx < 200 And LoopCount < 12 + uturn Then
      'Speaker.Tone(100,660,50)
      pinkturn = -78 * cw
    Else
      pinkturn=0
    EndIf
    
    If leftwallturn=0 And rightwallturn=0 And pillarturn=0 And pinkturn=0 Then
      gyroturn = @relativeHeading * correction * 2
    Else
      gyroturn=0
    EndIf
    turn=leftwallturn+rightwallturn+pillarturn+pinkturn+gyroturn
    LCD.Clear()
    LCD.Text(1,50,0,2,leftwallturn)
    LCD.Text(1,50,20,2,rightwallturn)
    LCD.Text(1,50,40,2,pillarturn)
    LCD.Text(1,50,60,2,gyroturn)
  EndIf
  
  'Power To Medium Motor
  
  steeringPower = (turn - Motor.GetCount("A")) * 2
  Motor.StartPower("A", steeringPower)
EndSub

'-----------------------------------------------------------------

Function waitDegrees(in number degrees)
  dDegrees = Motor.GetCount("D")
  While Math.Abs(Motor.GetCount("D") - dDegrees) < degrees
    Steering()
  EndWhile
  'Speaker.Tone(100,4000,50)
EndFunction

'-----Check Parking-----'
CheckParking=0
Sub CheckParking
  While loopCount<5
    If cw=1 Then
      If pinkx>0 And pinkx<150 Then
        parking=loopCount
        Speaker.Tone(100,800,1)
      EndIf
    Else
      If pinkx>180 Then
        Speaker.Tone(100,800,1)
        parking=loopCount
      EndIf
    EndIf
  EndWhile
EndSub

Thread.Run=CheckParking

'----- Loop Functions------'
speed = 65
loopCount = 0
round = 12
cw = 0
uturn = 0
uturnnow=0
wallCheck=1
parking=4
correction=1

getSignature(3,1,lastGreenX,lastGreenY)
getSignature(3,2,lastRedX,lastRedY)
getSignature(1,1,greenx,greeny)
getSignature(1,2,redx,redy)

If redy>greeny Then
  uTurnPiller=1 'green
ElseIf greeny>redy Then
  uTurnPiller=-1 'red
EndIf

If lastRedY>lastGreenY Then
  uturn=1
EndIf
Display(uTurnPiller,greeny)

While loopCount<round
  If loopCount = 0 Then
    ResetSteering()
    waitDegrees(80)
    
    While Sensor.ReadRawValue(4,0) = 6
      Steering()
    EndWhile
    waitDegrees(5)
    
    If Sensor.ReadRawValue(4,0) > 3 Then 'orange
      cw = 1
      Speaker.Tone(100,50,50)
    Else
      cw = -1
      Speaker.Tone(100,1200,50)
    EndIf
    
    target = target - 91.5 * cw
    
  Else
    
    If cw=lastPillar Then
      waitDegrees(1500)
      Speaker.Tone(100,220,50)
    Else
      waitDegrees(1600)
      Speaker.Tone(100,660,50)
    EndIf
    
    If loopCount=12 + uturn Then
      timeCount=0
      speed=0
      Steering()
      music=300
      While timeCount<6
        Speaker.Tone(100,music,50)
        Program.Delay(1000)
        music+=100
        If timeCount>2 Then
          music+=100
        EndIf
        timeCount++
      EndWhile
      speed=65
      If cw=1 Then
        avoidGreenpixel=avoidRedpixel
      Else
        avoidRedpixel=avoidGreenpixel
      EndIf
    EndIf
    
    parkingcheck=1
    
    If cw = 1 Then
      While Sensor.ReadRawValue(4,0) <> 4 And Sensor.ReadRawValue(4,0) <> 5 'WaitOrange
        Steering()
      EndWhile
    Else
      While Sensor.ReadRawValue(4,0) <> 2 'Wait Blue
        Steering()
      EndWhile
    EndIf
    Speaker.Tone(100,220,150)
    
    If loopCount=3 And lastRedX=0 And lastGreenX=0 And lastPillar=1 Then
      uturn=1
    EndIf
    
    If loopCount = 8 And uturn = 1 Then
      pillarRdistance=0
      pillarGdistance=0
      'target = target - 50 * lastPillar
      'waitDegrees(120) 'Time to U-Turn
      
      cw = cw * -1
      If uTurnPiller=0 Then
        uTurnPiller=lastPillar
      EndIf
      If uTurnPiller = -1 Then
        target = target - 187
      Else
        target = target + 187
      EndIf
      uturnnow = 1
      Speaker.Tone(100,880,50)
      waitDegrees(950)
      Speaker.Tone(100,880,50)
      uturnnow=0
      pillarRdistance = 220
      pillarGdistance = 200
      
    ElseIf loopCount < 8 Then
      target = target - 92.25 * cw
    Else
      target = target - 92.50 * cw
    EndIf
    
    'Display(target,0)
  EndIf
  
  If uturn=0  Then
    round = 12 + parking
  Else
    round = 13 + (4 - parking)
  EndIf
  'Display(parking,loopCount)
  loopCount = loopCount + 1
EndWhile

If cw = -1 Then
  While Sensor.ReadRawValue(4,0) <> 4 And Sensor.ReadRawValue(4,0) <> 5 'WaitOrange
    Steering()
  EndWhile
Else
  While Sensor.ReadRawValue(4,0) <> 2 'Wait Blue
    Steering()
  EndWhile
EndIf

If cw=1 Then
  waitDegrees(100)
  pillarRdistance=0
  pillarGdistance=0
  rightwallturn=0
  waitDegrees(50)
  
Else
  waitDegrees(600)
  pillarRdistance=0
  pillarGdistance=0
  leftwall=0
  waitDegrees(390)
EndIf

uturnnow=1
waitDegrees(200)
pillarRdistance=0
pillarGdistance=0
followRdistance=0
followGdistance=0
Speaker.Tone(100,220,50)
uturnnow=1
speed=50
target=target + 94.25 * cw

Time.Reset5()
stuck=0
degrees=Motor.GetCount("D")
While stuck<25 Or Time.Get5()<2000
  If(Motor.GetCount("D")-degrees)<3 Then
    stuck++
  Else
    stuck=0
  EndIf
  dDegrees=Motor.GetCount("D")
  Steering()
EndWhile
speed=0
Speaker.Tone(100,900,1000)
Program.Delay(1000)